Problem link : [https://leetcode.com/problems/set-mismatch/]
Tag: Easy
Approach 1:bruteforce

Tc = O( )
sc = O( )

code:
class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        unordered_map<int,int>mp;
        vector<int>ans;
        for(auto x:nums){
            mp[x]++;
        }
        for (auto it :mp){
            if(it.second==2) {
                ans.push_back(it.first);
            }
            }
        for(int i=1;i<=nums.size();i++){
            if(mp.count(i)==0)
            ans.push_back(i);
        }
        return ans;
    }
};

Approach 2:xoring 

Tc = O(n)
sc = O(1)

code
class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        int n = nums.size();
        int x = 0, n1;
        for (int i = 1; i <= n; i++) {
            int num = abs(nums[i - 1]);
            x ^= i ^ num;
            if (nums[num - 1] < 0) n1 = num;
            else nums[num - 1] *= -1;
        }
        return {n1, x ^ n1};
    }
};

Approach 3:

Tc = O( )
sc = O( )

code:
